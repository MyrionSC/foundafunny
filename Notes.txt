Change timer init (weekly timers) to calculate activation time from originalActivationTime
    Test before going further.
        OriginalActivationTime doesn't get uploaded right now for some reason
Change weekly timers and to use originalActivationTime when calculating
    new activation time
Set new activationTime when endcontent exists. After Activation Length, use OriginalActivationTime
    to calculate new activation time.









----- TO DO -----

todo mainpage:
Settings
    Themes (black and white)
Connection error handling (could be as soon as socket.io looses connection)
Sort timers by ActivationTime in db gettimers function
Do something about showing a lot of timers (limit gotten amount or slider)
    slider for favorites as well
communicate error messages to client when db operations fail etc.
Make small notification popups (in a not annoying way) for everything (incoming and local changes)

todo frontpage:
Rework the design, test out bootstrap styles
On page creation, print new page url in textbox with copy-to-clipboard button in side

todo: server
See if server files can't be thrown into a subdirectory

Could have:
A timecounter for the page timezone
emoticons in text
twitter support
9gag support
twitch stream support
imgur support


----- BUGS -----

- Important -
fix weekly timers
    When the client and servers date don't match, the UpdateActivationTime function does
        not calculate the time correctly. Most likely line 313 is the problem.
            Exibit 1 (client two hours ahead):
                Client time: wednesday 01.00
                Server time: tuesday 11.00
                The server shoots wrong by one day

Going from history to set timer sometimes destroy datetimepicker.
    It is $location.set({}) that does it. Try some combinations to fix it (currently disabled).
History possibly gotten twice (it's written twice in server logs at least)
if you change views via adressbar, sidebar fucks up
History: if there are 10 contents, you can push get next content and get 0 content
Weekly timer content might be added twice at activation
When redirecting from heroku domain to custom domain, hash routing is lost
    It might not be bad actually, atleast the mainpage is better for it imo

----- Notes -----

When setting timers, should the user be allowed to set seconds? Should ask the group what they think.
How long should users be allowed to set timer ActivationLength? Anything more than 1000 sec would
    probably be stupid
The values in setTimer are almost certainly wrong for various tz's, but that is a problem for a later date
bootstrap via cdn sometimes takes a few seconds to load. consider placing it locally if problems persists.
Should timer activation content be added to db when no one is online? Should it be added at all?
Remember to monkeytest content input. Too long contents will fuck history view up, I guarantee it!
    (maybe not anymore with bootstrap

---- Before Release -----

Find stable versions of dependencies and use those instead of the newest versions always.

----- Random thoughts -----

On timezones:
Using an offset value corresponding to the timezone of the client works. I just have to be able to calculate the correct
offset at page generation time, by making the user choose in which timezone the page should be located. That should be
changeable from the settings menu. But that is further down the line. A lot of testing required, but mainly just value
tuning, so should be easy (and boring...)

On "dynamic" page serving:
Seems that you normally inject javascript into the header of a statically served
html page to achieve that dynamic nature of a statically served page. I just look at
the last part of the page url, as that is the only thing i need. But that might not
be following conventions. If I ever need more, I will probably look into doing it the right way.